{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_GRS",
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "storage account name"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "cdnSku": {
      "type": "string",
      "defaultValue": "Standard_Microsoft",
      "allowedValues": [
        "Standard_Verizon",
        "Standard_Akamai",
        "Standard_Microsoft",
        "Premium_Verizon"
      ],
      "metadata": {
        "description": "Pricing tier of the CDN Profile."
      }
    },
    "cdnProfileName": {
      "type": "string",
      "metadata": {
        "description": "cdn profile name"
      }
    },
    "cdnEndPointName": {
      "type": "string",
      "metadata": {
        "description": "cdn endpoint name"
      }
    },
    "cdnEndpointCustomDomain": {
      "type": "string",
      "metadata": {
        "description": "cdn endpoint custom domain"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "KV store name for certification"
      }
    },
    "certificateName": {
      "type": "string",
      "metadata": {
        "description": "certificate name in KV"
      }
    },
    "originName": {
      "type": "string",
      "metadata": {
        "description": "origin  name"
      }
    }
  },
  "variables": {
    "cdnCustomDomain": "[replace(parameters('cdnEndpointCustomDomain'),'.','-')]"
  },
  "resources": [
    {
      "apiVersion": "2020-08-01-preview",
      "kind": "StorageV2",
      "location": "[parameters('location')]",
      "name": "[parameters('storageAccountName')]",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true,
              "keyType": "Account"
            },
            "file": {
              "enabled": true,
              "keyType": "Account"
            }
          }
        },
        "minimumTlsVersion": "TLS1_2",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow",
          "ipRules": [],
          "virtualNetworkRules": []
        },
        "supportsHttpsTrafficOnly": true
      },
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      },
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices"
    },
    {
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        }
      },
      "type": "Microsoft.Storage/storageAccounts/queueServices"
    },
    {
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "properties": {
        "cors": {
          "corsRules": []
        }
      },
      "type": "Microsoft.Storage/storageAccounts/tableServices"
    },
    {
      "apiVersion": "2020-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "name": "[concat(parameters('storageAccountName'), '/default/$web')]",
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "None"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2020-09-01",
      "name": "[parameters('cdnProfileName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('cdnSku')]"
      },
      "kind": "cdn",
      "properties": {}
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints",
      "apiVersion": "2020-09-01",
      "name": "[concat(parameters('cdnProfileName'), '/', parameters('cdnEndPointName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('cdnProfileName'))]"
      ],
      "properties": {
        "originHostHeader": "[replace(replace(reference(parameters('storageAccountName')).primaryEndpoints.web,'https://',''),'/','')]",
        "contentTypesToCompress": [
          "application/eot",
          "application/font",
          "application/font-sfnt",
          "application/javascript",
          "application/json",
          "application/opentype",
          "application/otf",
          "application/pkcs7-mime",
          "application/truetype",
          "application/ttf",
          "application/vnd.ms-fontobject",
          "application/xhtml+xml",
          "application/xml",
          "application/xml+rss",
          "application/x-font-opentype",
          "application/x-font-truetype",
          "application/x-font-ttf",
          "application/x-httpd-cgi",
          "application/x-javascript",
          "application/x-mpegurl",
          "application/x-opentype",
          "application/x-otf",
          "application/x-perl",
          "application/x-ttf",
          "font/eot",
          "font/ttf",
          "font/otf",
          "font/opentype",
          "image/svg+xml",
          "text/css",
          "text/csv",
          "text/html",
          "text/javascript",
          "text/js",
          "text/plain",
          "text/richtext",
          "text/tab-separated-values",
          "text/xml",
          "text/x-script",
          "text/x-component",
          "text/x-java-source"
        ],
        "isCompressionEnabled": true,
        "isHttpAllowed": true,
        "isHttpsAllowed": true,
        "queryStringCachingBehavior": "IgnoreQueryString",
        "origins": [
          {
            "name": "[parameters('originName')]",
            "properties": {
              "hostName": "[replace(replace(reference(parameters('storageAccountName')).primaryEndpoints.web,'https://',''),'/','')]",
              "httpPort": 80,
              "httpsPort": 443,
              "originHostHeader": "[replace(replace(reference(parameters('storageAccountName')).primaryEndpoints.web,'https://',''),'/','')]",
              "priority": 1,
              "weight": 1000,
              "enabled": true
            }
          }
        ],
        "originGroups": [],
        "geoFilters": [],
        "urlSigningKeys": []
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints/origins",
      "apiVersion": "2020-09-01",
      "name": "[concat(parameters('cdnProfileName'), '/', parameters('cdnEndPointName'), '/', parameters('originName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/endpoints', parameters('cdnProfileName'), parameters('cdnEndPointName'))]",
        "[resourceId('Microsoft.Cdn/profiles', parameters('cdnProfileName'))]"
      ],
      "properties": {
        "hostName": "[replace(replace(reference(parameters('storageAccountName')).primaryEndpoints.web,'https://',''),'/','')]",
        "httpPort": 80,
        "httpsPort": 443,
        "originHostHeader": "[replace(replace(reference(parameters('storageAccountName')).primaryEndpoints.web,'https://',''),'/','')]",
        "priority": 1,
        "weight": 1000,
        "enabled": true
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints/customdomains",
      "apiVersion": "2020-09-01",
      "name": "[concat(parameters('cdnProfileName'), '/', parameters('cdnEndPointName'), '/', variables('cdnCustomDomain'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/endpoints', parameters('cdnProfileName'), parameters('cdnEndPointName'))]",
        "[resourceId('Microsoft.Cdn/profiles', parameters('cdnProfileName'))]"
      ],
      "properties": {
        "hostName": "[parameters('cdnEndpointCustomDomain')]"
      }
    }
  ],
  "outputs": {
    "StorageBlobName": {
      "value": "[parameters('storageAccountName')]",
      "type": "string"
    },
    "StorageBlobKey": {
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
      "type": "string"
    },
    "cdnProfileName": {
      "value": "[parameters('cdnProfileName')]",
      "type": "string"
    },
    "cdnEndPointName": {
      "value": "[parameters('cdnEndPointName')]",
      "type": "string"
    },
    "cdnEndpointCustomDomain": {
      "value": "[variables('cdnCustomDomain')]",
      "type": "string"
    },
    "keyVaultName": {
      "value": "[parameters('keyVaultName')]",
      "type": "string"
    },
    "certificateName": {
      "value": "[parameters('certificateName')]",
      "type": "string"
    },
    "resourceGroupNameForProfile": {
      "value": "[resourceGroup().name]",
      "type": "string"
    }
  }
}
